version: "3"

# サービスコンテナ
services:
  # Ruby on Rails コンテナ
  rails:
    build:
      context: ./docker/rails # ./docker/rails/Dockerfile でビルド
      args:
        # Docker実行ユーザIDをビルド時に使用
        UID: $UID
    tty: true # 標準入出力有効化＆コンテナ起動したままに
    links:
      - db
    volumes:
      # ドキュメントルート: ./web-data/ => docker://rails:/var/www/
      - ./web-data/:/var/www/
    environment:
      RAILS_ENV: development
      LANG: C.UTF-8
      TZ: Asia/Tokyo
      DATABASE_URL: mysql2://root:root@db:3306
      # VIRTUAL_HOST設定（nginx-proxy）
      VIRTUAL_HOST: rails.localhost # https://rails.localhost/ で稼働
      VIRTUAL_PORT: 3000
      CERT_NAME: default
  
  # MySQL コンテナ
  db:
    build: ./docker/db
    volumes:
      # DB永続化: db-dataボリュームコンテナをマウント
      - db-data:/var/lib/mysql/
      # 起動時にinitdb.d内で定義されたデータベースを構築する
      - ./docker/db/initdb.d/:/docker-entrypoint-initdb.d/
      # ダンプデータ共有用ディレクトリ
      - ./docker/db/dump/:/var/dump/
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rails_development
  
  # phpMyAdmin コンテナ
  pma:
    image: phpmyadmin/phpmyadmin:latest
    links:
      - db
    volumes:
      - /sessions
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
      # VIRTUAL_HOST設定（nginx-proxy）
      VIRTUAL_HOST: pma.rails.localhost # https://pma.rails.localhost/ で稼働
      VIRTUAL_PORT: 80
      CERT_NAME: default

  # プロキシサーバ
  nginx-proxy:
    image: jwilder/nginx-proxy
    privileged: true # ルート権限
    ports:
      - "80:80" # http
      - "443:443" # https
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
      - /etc/nginx/vhost.d
      - ./certs:/etc/nginx/certs:ro # letsencryptコンテナが ./certs/ に作成したSSL証明書を読む
    # restart: always # Dockerサービス起動時に自動起動
    environment:
      DHPARAM_GENERATION: "false"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

  # 無料SSL証明書発行コンテナ
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/share/nginx/html
      - /etc/nginx/vhost.d
      - ./certs:/etc/nginx/certs:rw # ./certs/ にSSL証明書を書き込めるように rw モードで共有
    depends_on:
      - nginx-proxy # nginx-proxyコンテナの後で起動
    # restart: always # Dockerサービス起動時に自動起動
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
  
# ボリュームコンテナ
volumes:
  db-data:
    driver: local
